{"ast":null,"code":"var _jsxFileName = \"C:\\\\Digikull\\\\Assignments\\\\todolist-redux\\\\src\\\\component\\\\AddToDoList.js\";\nimport React, { useState } from 'react';\n\nfunction AddToDoList() {\n  const [inputItem, setInputItem] = useState({\n    task: '',\n    subtask: '',\n    desc: '',\n    esd: '',\n    //estimated start date\n    eed: '',\n    //estimated end date\n    asd: '',\n    //actual start date\n    aed: '',\n    //actual end date\n    addinfo: ''\n  });\n  const [toDoArray, setToDoArray] = useState([]);\n\n  const handleAdd = () => {\n    setToDoArray([...toDoArray, {\n      task: inputItem.task,\n      subtask: inputItem.subtask,\n      desc: inputItem.desc,\n      esd: inputItem.esd,\n      eed: inputItem.eed,\n      asd: inputItem.asd,\n      aed: inputItem.aed,\n      addinfo: inputItem.addinfo,\n      tstatus: ''\n    }], inputItem.task = '', inputItem.subtask = '', inputItem.desc = '', inputItem.esd = '', inputItem.eed = '', inputItem.asd = '', inputItem.aed = '', inputItem.addinfo = '', inputItem.tstatus = '');\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"disptask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputItem.task,\n    placeholder: \"Task\",\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        task: event.target.value\n      });\n    },\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Sub Task\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputItem.subtask,\n    placeholder: \"SubTask\",\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        subtask: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: inputItem.desc,\n    placeholder: \"Description\",\n    rows: \"5\",\n    cols: \"70\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dispdate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Estimated Start Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: inputItem.esd,\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        esd: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Estimated End Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: inputItem.eed,\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        eed: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Actual Start Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: inputItem.asd,\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        asd: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Actual End Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: inputItem.aed,\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        aed: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Additional Information\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputItem.addinfo,\n    placeholder: \"Additional Information\",\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        addinfo: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputItem.tstatus,\n    placeholder: \"status\",\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        tstatus: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Add Task\",\n    onClick: event => {\n      handleAdd();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), console.log(toDoArray), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"To Do List\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, toDoArray.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 37\n    }\n  }, item.task, \" \", item.subtask, \" \", item.esd, \" \", item.eed)))));\n}\n\nexport default AddToDoList;","map":{"version":3,"sources":["C:/Digikull/Assignments/todolist-redux/src/component/AddToDoList.js"],"names":["React","useState","AddToDoList","inputItem","setInputItem","task","subtask","desc","esd","eed","asd","aed","addinfo","toDoArray","setToDoArray","handleAdd","tstatus","event","target","value","console","log","map","item","index"],"mappings":"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","sourcesContent":["import React , { useState } from 'react'\r\n\r\nfunction AddToDoList () {\r\n    const [inputItem , setInputItem] = useState({task:'',\r\n                                                 subtask:'',\r\n                                                 desc:'',\r\n                                                 esd:'', //estimated start date\r\n                                                 eed:'', //estimated end date\r\n                                                 asd:'', //actual start date\r\n                                                 aed:'', //actual end date\r\n                                                 addinfo:''\r\n                                                })\r\n    \r\n    const [toDoArray , setToDoArray] = useState([])\r\n\r\n    const handleAdd = () => {\r\n                            setToDoArray( [ ...toDoArray,\r\n                            {task : inputItem.task, subtask : inputItem.subtask,\r\n                            desc : inputItem.desc, esd : inputItem.esd,\r\n                            eed : inputItem.eed, asd : inputItem.asd,\r\n                            aed : inputItem.aed, addinfo: inputItem.addinfo,\r\n                            tstatus:''\r\n                            }\r\n                            ] , inputItem.task='', inputItem.subtask='', inputItem.desc='', inputItem.esd='',\r\n                            inputItem.eed='',inputItem.asd='', inputItem.aed='',inputItem.addinfo='', inputItem.tstatus='' )\r\n                            }\r\n                                              \r\n    return(\r\n        <>\r\n            <br/>\r\n            <div className='disptask'>\r\n                <strong>Task</strong>\r\n                <input type='text' value={inputItem.task} placeholder='Task'\r\n                onChange={(event)=>{setInputItem({...inputItem,task: event.target.value})}} autoFocus/>\r\n                <strong>Sub Task</strong>\r\n                <input type = 'text' value = {inputItem.subtask} placeholder ='SubTask'\r\n                onChange={(event)=>{setInputItem({...inputItem,subtask: event.target.value})}}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n                <strong>Description</strong>\r\n                {/* <textarea id=\"DtReason\" name=\"DtReason\" rows=\"5\" cols=\"50\"></textarea> */}\r\n                <textarea  value = {inputItem.desc} placeholder ='Description' rows=\"5\" cols=\"70\"></textarea>\r\n                {/* <input type = 'text' value = {inputItem.desc} placeholder ='Description'\r\n                onChange={(event)=>{setInputItem({...inputItem,desc: event.target.value})}}/> */}\r\n            </div>\r\n            <br/>\r\n            <div className='dispdate'>\r\n                <strong>Estimated Start Date</strong>\r\n                <input type = 'date' value = {inputItem.esd} \r\n                onChange={(event)=>{setInputItem({...inputItem,esd: event.target.value})}}/>\r\n                <strong>Estimated End Date</strong>\r\n                <input type = 'date' value = {inputItem.eed} \r\n                onChange={(event)=>{setInputItem({...inputItem,eed: event.target.value})}}/>\r\n                <strong>Actual Start Date</strong>\r\n                <input type = 'date' value = {inputItem.asd} \r\n                onChange={(event)=>{setInputItem({...inputItem,asd: event.target.value})}}/>\r\n                <strong>Actual End Date</strong>\r\n                <input type = 'date' value = {inputItem.aed} \r\n                onChange={(event)=>{setInputItem({...inputItem,aed: event.target.value})}}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n                <strong>Additional Information</strong>\r\n                <input type = 'text' value = {inputItem.addinfo} placeholder ='Additional Information'\r\n                onChange={(event)=>{setInputItem({...inputItem,addinfo: event.target.value})}}/>\r\n                <input type = 'text' value = {inputItem.tstatus} placeholder ='status'\r\n                onChange={(event)=>{setInputItem({...inputItem,tstatus: event.target.value})}}/>\r\n            </div>\r\n            <br/>\r\n            <input type = 'button'  value =\"Add Task\" onClick={(event)=>{handleAdd()}} />\r\n                \r\n            {console.log(toDoArray)}\r\n            <br/>\r\n            <strong>To Do List</strong>\r\n                <ul>\r\n                {toDoArray.map((item, index) => (\r\n                    <li key={index}><strong>{item.task} {item.subtask} {item.esd} {item.eed}</strong></li>\r\n                        ))}\r\n                </ul>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddToDoList"]},"metadata":{},"sourceType":"module"}