{"ast":null,"code":"var _jsxFileName = \"C:\\\\Digikull\\\\Assignments\\\\todolist-redux\\\\src\\\\component\\\\SearchToDoList.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nfunction SearchToDoList(props) {\n  const [inputIt, setInputIt] = useState({\n    cond: '',\n    comp: '',\n    descp: '',\n    mode: false\n  });\n\n  function arraydisp(item, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 35\n      }\n    }, `${item.task} ${item.subtask} ${item.desc} \n                ${new Date(item.dt).toLocaleDateString('en-GB')}\n                ${item.tstatus}`));\n  }\n\n  function SearchALL() {\n    {\n      setInputIt({\n        cond: '',\n        comp: '',\n        descp: '',\n        mode: false\n      });\n    }\n  }\n\n  function HandleCombo(para) {\n    if (para == 'dt') {\n      return /*#__PURE__*/React.createElement(\"select\", {\n        value: inputIt.comp,\n        onChange: event => {\n          setInputIt({ ...inputIt,\n            comp: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, \"Choose...\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \">\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, \"Greater than\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"<\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, \"Less than \"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"=\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, \"Equal to\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"select\", {\n        value: inputIt.comp,\n        onChange: event => {\n          setInputIt({ ...inputIt,\n            comp: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, \"Choose...\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"=\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, \"Equal to\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Includes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, \"Includes\"));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dispsearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Contsearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dispSingleSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: inputIt.cond,\n    onChange: event => {\n      setInputIt({ ...inputIt,\n        cond: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, \"Choose...\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"tstatus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, \"Status\")), HandleCombo(inputIt.cond), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputIt.descp,\n    placeholder: \"Description\",\n    onChange: event => {\n      setInputIt({ ...inputIt,\n        descp: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Search\",\n    onClick: event => {\n      setInputIt({ ...inputIt,\n        mode: true\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }), console.log(inputIt, 'check'))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Search All\",\n    onClick: event => SearchALL(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 32\n    }\n  }, \" To Do List \"), \" \"), /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, inputIt.mode ? props.tdArray.filter(item => {\n    const sear = item[inputIt.cond];\n\n    if (inputIt.cond == 'dt') {\n      console.log(new Date(sear).toLocaleDateString('en-GB'), inputIt.descp.trim(), 'Date Check');\n\n      switch (inputIt.comp) {\n        case '>':\n          {\n            return new Date(sear).toLocaleDateString('en-GB') > inputIt.descp.trim() ? true : false;\n          }\n\n        case '<':\n          {\n            return new Date(sear).toLocaleDateString('en-GB') < inputIt.descp.trim() ? true : false;\n          }\n\n        case '=':\n          {\n            return new Date(sear).toLocaleDateString('en-GB') == inputIt.descp.trim() ? true : false;\n          }\n\n        default:\n          return false;\n      }\n    } else {\n      switch (inputIt.comp) {\n        case '=':\n          {\n            return sear == inputIt.descp.trim() ? true : false;\n          }\n\n        case 'Includes':\n          {\n            return inputIt.cond + '.includes(' + inputIt.descp.trim() + ')' ? true : false;\n          }\n\n        default:\n          return false;\n      }\n    }\n  }).map((item, index) => arraydisp(item, index)) : props.tdArray.map((item, index) => arraydisp(item, index))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    tdArray: state.toDoArray\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    findMyItem: val => dispatch({\n      type: 'FIND_ITEM',\n      payload: val\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchToDoList);","map":{"version":3,"sources":["C:/Digikull/Assignments/todolist-redux/src/component/SearchToDoList.js"],"names":["React","useState","connect","SearchToDoList","props","inputIt","setInputIt","cond","comp","descp","mode","arraydisp","item","index","task","subtask","desc","Date","dt","toLocaleDateString","tstatus","SearchALL","HandleCombo","para","event","target","value","console","log","tdArray","filter","sear","trim","map","mapStateToProps","state","toDoArray","mapDispatchToProps","dispatch","findMyItem","val","type","payload"],"mappings":"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","sourcesContent":["import React , { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction SearchToDoList (props) {\r\n    const [inputIt , setInputIt] = useState({cond:'', comp:'', descp:'', mode:false})\r\n    \r\n    function arraydisp(item,index) {\r\n        return (<li  key={index} ><strong>\r\n                {`${item.task} ${item.subtask} ${item.desc} \r\n                ${new Date(item.dt).toLocaleDateString('en-GB')}\r\n                ${item.tstatus}`}\r\n                </strong>\r\n                </li>)\r\n    }\r\n    function SearchALL() {\r\n        {setInputIt({cond:'', comp:'', descp:'', mode:false})}\r\n    }\r\n    function HandleCombo(para) {\r\n        if (para=='dt')\r\n        { return(\r\n        <select value = {inputIt.comp} \r\n            onChange={(event)=>{setInputIt({...inputIt,comp: event.target.value})}}>\r\n            <option value=''>Choose...</option>\r\n            <option value='>'>Greater than</option>\r\n            <option value='<'>Less than </option>\r\n            <option value='='>Equal to</option> \r\n        </select> )\r\n        }\r\n        else\r\n        {return(\r\n        <select value = {inputIt.comp} \r\n            onChange={(event)=>{setInputIt({...inputIt,comp: event.target.value})}}>\r\n            <option value=''>Choose...</option>\r\n            <option value='='>Equal to</option> \r\n            <option value='Includes'>Includes</option> \r\n        </select> )\r\n        }\r\n    }\r\n    return(\r\n        <>\r\n            <div className='dispsearch'>\r\n                <div className='Contsearch'>\r\n                    <div className='dispSingleSearch'>\r\n                        <select value = {inputIt.cond} \r\n                        onChange={(event)=>{setInputIt({...inputIt,cond: event.target.value})}}>\r\n                            <option value=''>Choose...</option>\r\n                            <option value='task'>Task</option>\r\n                            <option value='dt'>Date</option>\r\n                            <option value='tstatus'>Status</option>\r\n                        </select>\r\n                        {HandleCombo(inputIt.cond)}                        \r\n                         \r\n                        \r\n                        <input type ='text' value={inputIt.descp} placeholder='Description'\r\n                        onChange={(event)=>{setInputIt({...inputIt,descp: event.target.value})}}/>\r\n                        <input type='button' value='Search' \r\n                        onClick={(event)=>{setInputIt({...inputIt,mode: true})}}/>\r\n                        {console.log(inputIt,'check')}\r\n                    </div>\r\n                </div>\r\n                <input type='button' value='Search All'\r\n                onClick={(event)=>SearchALL()} />\r\n            </div>\r\n            <p className='App'><strong> To Do List </strong> </p>\r\n\r\n        <ol>\r\n            {/* {console.log(statem)} */}\r\n            { inputIt.mode?   props.tdArray.filter(item=> {\r\n                const sear = item[inputIt.cond]\r\n                if (inputIt.cond == 'dt')\r\n                {  console.log(new Date(sear).toLocaleDateString('en-GB') , inputIt.descp.trim() , 'Date Check')\r\n                    switch(inputIt.comp){\r\n                    case '>':{ return new Date(sear).toLocaleDateString('en-GB') > inputIt.descp.trim()? true: false}\r\n                    case '<':{ return new Date(sear).toLocaleDateString('en-GB') < inputIt.descp.trim()? true: false}\r\n                    case '=':{ return new Date(sear).toLocaleDateString('en-GB') == inputIt.descp.trim()? true: false}\r\n                    default: return false\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    switch(inputIt.comp){\r\n                    case '=':{ return sear == inputIt.descp.trim()? true: false}\r\n                    case 'Includes':{ return inputIt.cond\t +'.includes('+ inputIt.descp.trim() +')'? true: false}\r\n                    default: return false\r\n                    }\r\n                }\r\n\r\n            }).map((item, index) => arraydisp(item,index)) :  \r\n            props.tdArray.map((item, index) => arraydisp(item,index))\r\n\r\n            }\r\n        </ol>    \r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        tdArray: state.toDoArray\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch) => {\r\n    return{\r\n        findMyItem: (val) => dispatch({type:'FIND_ITEM' , payload: val}) ,\r\n        }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchToDoList)"]},"metadata":{},"sourceType":"module"}