{"ast":null,"code":"var _jsxFileName = \"C:\\\\Digikull\\\\Assignments\\\\todolist-redux\\\\src\\\\component\\\\logIn.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { connect } from 'react-redux';\n\nfunction LogIn() {\n  const {\n    register,\n    errors,\n    handleSubmit\n  } = useForm();\n\n  function handleAuth(evt) {\n    evt.preventDefault();\n    const credentialDetails = {\n      userName: evt.currentTarget['userName'].value,\n      password: evt.currentTarget['pass'].value,\n      returnSecureToken: true\n    };\n    console.log(credentialDetails);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"LoginContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Loginhead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleAuth(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, \"My To Do List\", /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"User name:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"userName\",\n    placeholder: \"User Name\",\n    ref: register({\n      required: {\n        value: true,\n        message: 'User Name is required'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }), errors.userName && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 47\n    }\n  }, errors.userName.message), \"Password      :\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"pass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, \"Cancel\")))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    state,\n    sendToTodolist: state.userData.password != null ? true : false\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    verify: val => dispatch({\n      type: 'LOGIN',\n      payload: val\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);","map":{"version":3,"sources":["C:/Digikull/Assignments/todolist-redux/src/component/logIn.js"],"names":["React","useForm","connect","LogIn","register","errors","handleSubmit","handleAuth","evt","preventDefault","credentialDetails","userName","currentTarget","value","password","returnSecureToken","console","log","required","message","mapStateToProps","state","sendToTodolist","userData","mapDispatchToProps","dispatch","verify","val","type","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAuB,iBAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,SAASC,KAAT,GAAiB;AACb,QAAM;AAACC,IAAAA,QAAD;AAAUC,IAAAA,MAAV;AAAiBC,IAAAA;AAAjB,MAAiCL,OAAO,EAA9C;;AAEA,WAASM,UAAT,CAAqBC,GAArB,EAA0B;AACtBA,IAAAA,GAAG,CAACC,cAAJ;AACA,UAAMC,iBAAiB,GAAE;AACrBC,MAAAA,QAAQ,EAAEH,GAAG,CAACI,aAAJ,CAAkB,UAAlB,EAA8BC,KADnB;AAErBC,MAAAA,QAAQ,EAAEN,GAAG,CAACI,aAAJ,CAAkB,MAAlB,EAA0BC,KAFf;AAGrBE,MAAAA,iBAAiB,EAAE;AAHE,KAAzB;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,iBAAZ;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEH,UAAU,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEI;AAAG,IAAA,SAAS,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,WAAW,EAAC,WAA/C;AACA,IAAA,GAAG,EAAEH,QAAQ,CAAC;AAACc,MAAAA,QAAQ,EAAE;AAACL,QAAAA,KAAK,EAAE,IAAR;AAAcM,QAAAA,OAAO,EAAE;AAAvB;AAAX,KAAD,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAKKd,MAAM,CAACM,QAAP,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,MAAM,CAACM,QAAP,CAAgBQ,OAAvB,CAL1B,kCAOI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAQI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,CAFJ,CADJ,CADJ,CADJ;AAuBH;;AAGD,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAEHA,IAAAA,KAFG;AAGHC,IAAAA,cAAc,EAAED,KAAK,CAACE,QAAN,CAAeT,QAAf,IAA2B,IAA3B,GAAkC,IAAlC,GAAyC;AAHtD,GAAP;AAMH,CAPD;;AASA,MAAMU,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,MAAM,EAAGC,GAAD,IAASF,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAEF;AAA1B,KAAD;AADtB,GAAP;AAGH,CAJD;;AAMA,eAAezB,OAAO,CAACkB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CrB,KAA7C,CAAf","sourcesContent":["import React from 'react'\r\nimport {useForm} from  'react-hook-form'\r\nimport {connect} from 'react-redux'\r\n\r\nfunction LogIn() {\r\n    const {register,errors,handleSubmit} = useForm()\r\n\r\n    function handleAuth (evt) {\r\n        evt.preventDefault()\r\n        const credentialDetails ={\r\n            userName: evt.currentTarget['userName'].value,\r\n            password: evt.currentTarget['pass'].value,\r\n            returnSecureToken: true\r\n        }\r\n        console.log(credentialDetails)\r\n    }\r\n    return(\r\n        <div className='LoginContainer'>\r\n            <div className='Loginhead'>\r\n                <form onSubmit={handleAuth()}>\r\n                  My To Do List \r\n                    <p className=''>\r\n                        User name:\r\n                        <input type='text' name='userName' placeholder='User Name'\r\n                        ref={register({required: {value: true, message: 'User Name is required' }})}        \r\n                        />\r\n                        {errors.userName && ( <span>{errors.userName.message}</span> )}\r\n                        Password      : \r\n                        <input type='password' name='pass' />\r\n                        <button type='Submit'>Submit</button>\r\n                        <button type='button'>Cancel</button>\r\n                        \r\n                    </p>\r\n                </form>\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        state,\r\n        sendToTodolist: state.userData.password != null ? true : false\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        verify: (val) => dispatch({ type: 'LOGIN', payload: val })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn)\r\n"]},"metadata":{},"sourceType":"module"}