{"ast":null,"code":"import Actions from \"../Action/Action\";\nexport default function reducer(state = {}, action) {\n  switch (action.type) {\n    case Actions.ADD_ITEM:\n      {\n        return { ...state,\n          toDoArray: [...state.toDoArray, ...action.payload]\n        };\n      }\n\n    case Actions.FIND_ITEM:\n      {// const found = toDoArray.find(toDoArray => toDoArray.index = index);\n        // console.log(found,'inside findvalue')\n        //return {...state, toDoArray: [...state.toDoArray, action.payload]}\n      }\n\n    case Actions.UPDATE_ITEM:\n      {\n        console.log('inside update');\n        var temVal = state.toDoArray.find((item, index) => {\n          console.log(item.arrcheck, 'array value', action.payload);\n\n          if (index == action.payload) {\n            return { ...state,\n              toDoArray: [...state.toDoArray.slice(0, action.payload), { ...temVal,\n                arrcheck: !item.arrcheck\n              }]\n            };\n          }\n        }); // return {...state, toDoArray: [...state.toDoArray, ...action.payload]}\n      }\n\n    case Actions.DELETE_ITEM:\n      {\n        return { ...state,\n          toDoArray: [...state.toDoArray.slice(0, action.payload), ...state.toDoArray.slice(action.payload + 1)]\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"sources":["C:/Digikull/Assignments/todolist-redux/src/Reducer/reducer.js"],"names":["Actions","reducer","state","action","type","ADD_ITEM","toDoArray","payload","FIND_ITEM","UPDATE_ITEM","console","log","temVal","find","item","index","arrcheck","slice","DELETE_ITEM"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAC,EAAvB,EAA0BC,MAA1B,EAAkC;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,OAAO,CAACK,QAAb;AAAwB;AACpB,eAAO,EAAC,GAAGH,KAAJ;AAAWI,UAAAA,SAAS,EAAE,CAAC,GAAGJ,KAAK,CAACI,SAAV,EAAqB,GAAGH,MAAM,CAACI,OAA/B;AAAtB,SAAP;AACH;;AACD,SAAKP,OAAO,CAACQ,SAAb;AAAyB,OACrB;AACA;AAEA;AACH;;AACD,SAAKR,OAAO,CAACS,WAAb;AAA2B;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,YAAIC,MAAM,GAAGV,KAAK,CAACI,SAAN,CAAgBO,IAAhB,CAAqB,CAACC,IAAD,EAAMC,KAAN,KAAgB;AAC9CL,UAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACE,QAAjB,EAA0B,aAA1B,EAAwCb,MAAM,CAACI,OAA/C;;AACA,cAAIQ,KAAK,IAAEZ,MAAM,CAACI,OAAlB,EAA2B;AACvB,mBAAO,EAAC,GAAGL,KAAJ;AAAWI,cAAAA,SAAS,EAAE,CAAC,GAAGJ,KAAK,CAACI,SAAN,CAAgBW,KAAhB,CAAsB,CAAtB,EAAwBd,MAAM,CAACI,OAA/B,CAAJ,EACzB,EAAC,GAAGK,MAAJ;AAAYI,gBAAAA,QAAQ,EAAG,CAACF,IAAI,CAACE;AAA7B,eADyB;AAAtB,aAAP;AAEH;AAEJ,SAPY,CAAb,CAFuB,CAUvB;AACH;;AACD,SAAKhB,OAAO,CAACkB,WAAb;AAA2B;AACvB,eAAO,EAAC,GAAGhB,KAAJ;AAAWI,UAAAA,SAAS,EAAE,CAAC,GAAGJ,KAAK,CAACI,SAAN,CAAgBW,KAAhB,CAAsB,CAAtB,EAAwBd,MAAM,CAACI,OAA/B,CAAJ,EAC3B,GAAGL,KAAK,CAACI,SAAN,CAAgBW,KAAhB,CAAsBd,MAAM,CAACI,OAAP,GAAe,CAArC,CADwB;AAAtB,SAAP;AAEH;;AACD;AAAS;AACL,eAAOL,KAAP;AACH;AA5BL;AA8BH","sourcesContent":["import Actions from \"../Action/Action\"\r\n\r\nexport default function reducer(state={},action) {\r\n    switch(action.type) {\r\n        case Actions.ADD_ITEM : {\r\n            return {...state, toDoArray: [...state.toDoArray, ...action.payload]}\r\n        }\r\n        case Actions.FIND_ITEM : {\r\n            // const found = toDoArray.find(toDoArray => toDoArray.index = index);\r\n            // console.log(found,'inside findvalue')\r\n        \r\n            //return {...state, toDoArray: [...state.toDoArray, action.payload]}\r\n        }\r\n        case Actions.UPDATE_ITEM : {\r\n            console.log('inside update')\r\n            var temVal = state.toDoArray.find((item,index) => {\r\n                console.log(item.arrcheck,'array value',action.payload)\r\n                if (index==action.payload) {\r\n                    return {...state, toDoArray: [...state.toDoArray.slice(0,action.payload),\r\n                        {...temVal, arrcheck : !item.arrcheck} ]}        \r\n                } \r\n                \r\n            })\r\n            // return {...state, toDoArray: [...state.toDoArray, ...action.payload]}\r\n        }\r\n        case Actions.DELETE_ITEM : {\r\n            return {...state, toDoArray: [...state.toDoArray.slice(0,action.payload), \r\n              ...state.toDoArray.slice(action.payload+1)  ]}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}