{"ast":null,"code":"var _jsxFileName = \"C:\\\\Digikull\\\\Assignments\\\\todolist-redux\\\\src\\\\component\\\\SearchToDo.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nfunction SearchToDoList(props) {\n  const [inputIt, setInputIt] = useState({\n    descp: ''\n  });\n\n  function SearchALL() {\n    /*#__PURE__*/\n    React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }\n    });\n    {\n      setInputIt({\n        descp: ''\n      });\n    }\n  }\n\n  function SearchSingle(para) {\n    /*#__PURE__*/\n    React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, props.tdArray.filter(item => item.name.includes(this.state.suggest)).map((item, index) => arraydisp(item, index)), props.tdArray.map((item, index) => {\n      /*#__PURE__*/\n      React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 30\n        }\n      }, `${item.task} ${item.subtask} ${item.desc} \n                ${new Date(item.dt).toLocaleDateString('en-GB')}\n                ${item.tstatus}`));\n    }));\n    {\n      setInputIt({\n        descp: ''\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dispsearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Contsearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dispSingleSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputIt.descp,\n    placeholder: \"Description\",\n    onChange: event => {\n      setInputIt({ ...inputIt,\n        descp: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Search\",\n    onClick: event => SearchSingle(inputIt.descp),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Search All\",\n    onClick: event => SearchALL(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 32\n    }\n  }, \" To Do List \"), \" \"));\n}\n\nconst mapStateToProps = state => {\n  return {\n    tdArray: state.toDoArray\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    findMyItem: val => dispatch({\n      type: 'FIND_ITEM',\n      payload: val\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchToDoList);","map":{"version":3,"sources":["C:/Digikull/Assignments/todolist-redux/src/component/SearchToDo.js"],"names":["React","useState","connect","SearchToDoList","props","inputIt","setInputIt","descp","SearchALL","SearchSingle","para","tdArray","filter","item","name","includes","state","suggest","map","index","arraydisp","task","subtask","desc","Date","dt","toLocaleDateString","tstatus","event","target","value","mapStateToProps","toDoArray","mapDispatchToProps","dispatch","findMyItem","val","type","payload"],"mappings":"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","sourcesContent":["import React , { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction SearchToDoList (props) {\r\n    const [inputIt , setInputIt] = useState({descp:''})\r\n        \r\n    function SearchALL() {\r\n        <ol>\r\n            \r\n        </ol>\r\n        {setInputIt({descp:''})}\r\n    }\r\n\r\n    function SearchSingle(para) {\r\n        <ol> \r\n            { props.tdArray.filter(item => item.name.includes(this.state.suggest))\r\n            .map((item, index) => arraydisp(item,index)) }\r\n            {props.tdArray.map((item, index) => {\r\n            <li key={index} ><strong>\r\n                {`${item.task} ${item.subtask} ${item.desc} \r\n                ${new Date(item.dt).toLocaleDateString('en-GB')}\r\n                ${item.tstatus}`}\r\n                </strong>\r\n                 </li>})\r\n            }\r\n        </ol>\r\n        {setInputIt({descp:''})}\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className='dispsearch'>\r\n                <div className='Contsearch'>\r\n                    <div className='dispSingleSearch'>\r\n                        <input type ='text' value={inputIt.descp} placeholder='Description'\r\n                        onChange={(event)=>{setInputIt({...inputIt,descp: event.target.value})}}/>\r\n                        <input type='button' value='Search' \r\n                        onClick={(event)=>SearchSingle(inputIt.descp)}/>\r\n                    </div>\r\n                </div>\r\n                <input type='button' value='Search All'\r\n                onClick={(event)=>SearchALL()} />\r\n            </div>\r\n            <p className='App'><strong> To Do List </strong> </p>\r\n\r\n            \r\n        \r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        tdArray: state.toDoArray\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch) => {\r\n    return{\r\n        findMyItem: (val) => dispatch({type:'FIND_ITEM' , payload: val}) ,\r\n        }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchToDoList)"]},"metadata":{},"sourceType":"module"}