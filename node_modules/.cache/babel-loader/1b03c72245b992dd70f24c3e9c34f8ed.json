{"ast":null,"code":"var _jsxFileName = \"C:\\\\Digikull\\\\Assignments\\\\todolist-redux\\\\src\\\\component\\\\SearchToDoList.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nfunction SearchToDoList(props) {\n  const [inputIt, setInputIt] = useState({\n    condition: '',\n    compare: '',\n    descp: ''\n  });\n\n  function dataDisplay(taskType, taskCond, taskcomp, taskdisc) {\n    if (taskType = 'mapALL') {\n      /*#__PURE__*/\n      React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 9\n        }\n      }, props.tdArray.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 35\n        }\n      }, `${item.task} ${item.subtask} ${item.desc} \n                ${new Date(item.dt).toLocaleDateString('en-GB')}\n                ${item.tstatus}`))));\n    } else {// <ul>\n      // { props.tdArray.filter(item => item.taskCond taskcomp taskdisc)  (\n      //     <li  key={index} ><strong>\n      //     {`${item.task} ${item.subtask} ${item.desc} \n      //     ${new Date(item.dt).toLocaleDateString('en-GB')}\n      //     ${item.tstatus}`}\n      //     </strong>\n      //     </li>\n      // ))}\n      // </ul>\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dispsearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Contsearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dispSingleSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: inputIt.cond,\n    onChange: event => {\n      setInputIt({ ...inputIt,\n        cond: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, \"Choose...\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"subtask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, \"Subtask\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, \"Status\")), /*#__PURE__*/React.createElement(\"select\", {\n    value: inputIt.comp,\n    onChange: event => {\n      setInputIt({ ...inputIt,\n        comp: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, \"Choose...\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \">\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, \"Greater than\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"<\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, \"Less than \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"=\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, \"Equal to\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputIt.descp,\n    placeholder: \"Description\",\n    onChange: event => {\n      setInputIt({ ...inputIt,\n        descp: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Search\",\n    onClick: event => {\n      dataDisplay('filterALL', '', '', '');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Search All\",\n    onClick: event => {\n      dataDisplay('mapALL', '', '', '');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 32\n    }\n  }, \" To Do List \"), \" \"));\n}\n\nconst mapStateToProps = state => {\n  return {\n    tdArray: state.toDoArray\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    findMyItem: val => dispatch({\n      type: 'FIND_ITEM',\n      payload: val\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchToDoList);","map":{"version":3,"sources":["C:/Digikull/Assignments/todolist-redux/src/component/SearchToDoList.js"],"names":["React","useState","connect","SearchToDoList","props","inputIt","setInputIt","condition","compare","descp","dataDisplay","taskType","taskCond","taskcomp","taskdisc","tdArray","map","item","index","task","subtask","desc","Date","dt","toLocaleDateString","tstatus","cond","event","target","value","comp","mapStateToProps","state","toDoArray","mapDispatchToProps","dispatch","findMyItem","val","type","payload"],"mappings":"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","sourcesContent":["import React , { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction SearchToDoList (props) {\r\n    const [inputIt , setInputIt] = useState({condition:'', compare:'', descp:''})\r\n\r\n    function dataDisplay (taskType,taskCond,taskcomp,taskdisc) {\r\n        if (taskType='mapALL')\r\n        {\r\n        <ul>\r\n            { props.tdArray.map((item, index) => (\r\n                <li  key={index} ><strong>\r\n                {`${item.task} ${item.subtask} ${item.desc} \r\n                ${new Date(item.dt).toLocaleDateString('en-GB')}\r\n                ${item.tstatus}`}\r\n                </strong>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n        }\r\n        else\r\n        {\r\n            // <ul>\r\n            // { props.tdArray.filter(item => item.taskCond taskcomp taskdisc)  (\r\n            //     <li  key={index} ><strong>\r\n            //     {`${item.task} ${item.subtask} ${item.desc} \r\n            //     ${new Date(item.dt).toLocaleDateString('en-GB')}\r\n            //     ${item.tstatus}`}\r\n            //     </strong>\r\n            //     </li>\r\n            // ))}\r\n            // </ul>\r\n        }\r\n    }\r\n    return(\r\n        <>\r\n            <div className='dispsearch'>\r\n                <div className='Contsearch'>\r\n                    <div className='dispSingleSearch'>\r\n                        <select value = {inputIt.cond} \r\n                        onChange={(event)=>{setInputIt({...inputIt,cond: event.target.value})}}>\r\n                            <option value=''>Choose...</option>\r\n                            <option value='task'>Task</option>\r\n                            <option value='subtask'>Subtask</option>\r\n                            <option value='desc'>Description</option>\r\n                            <option value='dt'>Date</option>\r\n                            <option value='status'>Status</option>\r\n                        </select>\r\n\r\n                        <select value = {inputIt.comp} \r\n                        onChange={(event)=>{setInputIt({...inputIt,comp: event.target.value})}}>\r\n                            <option value=''>Choose...</option>\r\n                            <option value='>'>Greater than</option>\r\n                            <option value='<'>Less than </option>\r\n                            <option value='='>Equal to</option>\r\n                        </select>\r\n                \r\n                        <input type ='text' value={inputIt.descp} placeholder='Description'\r\n                        onChange={(event)=>{setInputIt({...inputIt,descp: event.target.value})}}/>\r\n                        <input type='button' value='Search' \r\n                        onClick={(event)=>{dataDisplay('filterALL','','','')}}/>\r\n                        {/* onClick={(event)=>{dataDisplay('filterALL',{inputIt.comp},{inputIt.cond},{inputIt.descp})}}/> */}\r\n                    </div>\r\n                </div>\r\n                <input type='button' value='Search All'\r\n                onClick={(event)=>{dataDisplay('mapALL','','','')}} />\r\n            </div>\r\n            <p className='App'><strong> To Do List </strong> </p>\r\n            \r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        tdArray: state.toDoArray\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch) => {\r\n    return{\r\n        findMyItem: (val) => dispatch({type:'FIND_ITEM' , payload: val}) ,\r\n        }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchToDoList)"]},"metadata":{},"sourceType":"module"}