{"ast":null,"code":"var _jsxFileName = \"C:\\\\Digikull\\\\Assignments\\\\todolist-redux\\\\src\\\\component\\\\AddToDoList.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux'; // to be able to connect to store\n\nfunction AddToDoList(props) {\n  const [inputItem, setInputItem] = useState({\n    task: '',\n    subtask: '',\n    desc: '',\n    esd: '',\n    //estimated start date\n    eed: '',\n    //estimated end date\n    asd: '',\n    //actual start date\n    aed: '',\n    //actual end date\n    addinfo: '',\n    tstatus: ''\n  }); // const [toDoArray , setToDoArray] = useState([])\n  // const handleAdd = () => \n  // {\n  //     setToDoArray( [ ...toDoArray,\n  //     {task : inputItem.task, subtask : inputItem.subtask,\n  //     desc : inputItem.desc, esd : inputItem.esd,\n  //     eed : inputItem.eed, asd : inputItem.asd,\n  //     aed : inputItem.aed, addinfo: inputItem.addinfo\n  //     }\n  //     ] , inputItem.task='', inputItem.subtask='', inputItem.desc='', inputItem.esd='',\n  //     inputItem.eed='',inputItem.asd='', inputItem.aed='',inputItem.addinfo='')\n  // }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"disptask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputItem.task,\n    placeholder: \"Task\",\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        task: event.target.value\n      });\n    },\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Sub Task\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputItem.subtask,\n    placeholder: \"SubTask\",\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        subtask: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"disptextarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: inputItem.desc,\n    rows: \"5\",\n    cols: \"70\",\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        desc: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dispdate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Estimated Start Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: inputItem.esd,\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        esd: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Estimated End Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: inputItem.eed,\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        eed: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Actual Start Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: inputItem.asd,\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        asd: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Actual End Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: inputItem.aed,\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        aed: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"disptextarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Additional Information\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: inputItem.addinfo,\n    placeholder: \"Additional Info\",\n    rows: \"5\",\n    cols: \"60\",\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        addinfo: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dispbutton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Add Task\",\n    onClick: () => {\n      props.addMyList(inputItem.task, inputItem.subtask, inputItem.desc, inputItem.esd, inputItem.eed, inputItem.asd, inputItem.aed, inputItem.addinfo);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"To Do List\")), console.log(props.tdArray), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, props.tdArray.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 37\n    }\n  }, item.task, \" \", item.subtask, \" \", item.desc, new Date(item.esd).toLocaleDateString('en-GB'), new Date(item.eed).toLocaleDateString('en-GB'), new Date(item.asd).toLocaleDateString('en-GB'), new Date(item.aed).toLocaleDateString('en-GB'), item.addinfo)))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    tdArray: state.toDoArray\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addMyList: val => dispatch({\n      type: 'ADD_ITEM',\n      payload: val\n    })\n  };\n  return {\n    updateMyList: val => dispatch({\n      type: 'UPDATE_ITEM',\n      payload: val\n    })\n  };\n  return {\n    updateMyList: val => dispatch({\n      type: 'DELETE_ITEM',\n      payload: val\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddToDoList);","map":{"version":3,"sources":["C:/Digikull/Assignments/todolist-redux/src/component/AddToDoList.js"],"names":["React","useState","connect","AddToDoList","props","inputItem","setInputItem","task","subtask","desc","esd","eed","asd","aed","addinfo","tstatus","event","target","value","addMyList","console","log","tdArray","map","item","index","Date","toLocaleDateString","mapStateToProps","state","toDoArray","mapDispatchToProps","dispatch","val","type","payload","updateMyList"],"mappings":"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","sourcesContent":["import React , { useState } from 'react'\r\nimport { connect } from 'react-redux' // to be able to connect to store\r\n\r\nfunction AddToDoList (props) {\r\n    const [inputItem , setInputItem] = useState({task:'',\r\n                                                 subtask:'',\r\n                                                 desc:'',\r\n                                                 esd:'', //estimated start date\r\n                                                 eed:'', //estimated end date\r\n                                                 asd:'', //actual start date\r\n                                                 aed:'', //actual end date\r\n                                                 addinfo:'',\r\n                                                 tstatus:''\r\n                                                })\r\n    \r\n    // const [toDoArray , setToDoArray] = useState([])\r\n\r\n    // const handleAdd = () => \r\n    // {\r\n    \r\n    //     setToDoArray( [ ...toDoArray,\r\n    //     {task : inputItem.task, subtask : inputItem.subtask,\r\n    //     desc : inputItem.desc, esd : inputItem.esd,\r\n    //     eed : inputItem.eed, asd : inputItem.asd,\r\n    //     aed : inputItem.aed, addinfo: inputItem.addinfo\r\n    //     }\r\n    //     ] , inputItem.task='', inputItem.subtask='', inputItem.desc='', inputItem.esd='',\r\n    //     inputItem.eed='',inputItem.asd='', inputItem.aed='',inputItem.addinfo='')\r\n    // }\r\n                                              \r\n    return(\r\n        <>\r\n            <div className='disptask'>\r\n                <strong>Task</strong>\r\n                <input type='text' value={inputItem.task} placeholder='Task'\r\n                onChange={(event)=>{setInputItem({...inputItem,task: event.target.value})}} autoFocus/>\r\n                <strong>Sub Task</strong>\r\n                <input type = 'text' value = {inputItem.subtask} placeholder ='SubTask'\r\n                onChange={(event)=>{setInputItem({...inputItem,subtask: event.target.value})}}/>\r\n            </div>\r\n            \r\n            <div className='disptextarea'>\r\n                <strong>Description</strong>\r\n                <textarea  value = {inputItem.desc} rows=\"5\" cols=\"70\" \r\n                onChange={(event)=>{setInputItem({...inputItem,desc: event.target.value})}}/>\r\n            </div>\r\n            \r\n            <div className='dispdate'>\r\n                <strong>Estimated Start Date</strong>\r\n                <input type = 'date' value = {inputItem.esd} \r\n                onChange={(event)=>{setInputItem({...inputItem,esd: event.target.value})}}/>\r\n                <strong>Estimated End Date</strong>\r\n                <input type = 'date' value = {inputItem.eed} \r\n                onChange={(event)=>{setInputItem({...inputItem,eed: event.target.value})}}/>\r\n                <strong>Actual Start Date</strong>\r\n                <input type = 'date' value = {inputItem.asd} \r\n                onChange={(event)=>{setInputItem({...inputItem,asd: event.target.value})}}/>\r\n                <strong>Actual End Date</strong>\r\n                <input type = 'date' value = {inputItem.aed} \r\n                onChange={(event)=>{setInputItem({...inputItem,aed: event.target.value})}}/>\r\n            </div>\r\n            \r\n            <div className='disptextarea'>\r\n                <strong>Additional Information</strong>\r\n                <textarea  value = {inputItem.addinfo} placeholder ='Additional Info' rows=\"5\" cols=\"60\"\r\n                onChange={(event)=>{setInputItem({...inputItem,addinfo: event.target.value})}}/>\r\n                {/* <input type = 'text' value = {inputItem.tstatus} placeholder ='status'\r\n                onChange={(event)=>{setInputItem({...inputItem,tstatus: event.target.value})}}/> */}\r\n            </div>\r\n            \r\n            <div className='dispbutton'>\r\n                <input type = 'button'  value =\"Add Task\" \r\n                onClick={()=>{props.addMyList(inputItem.task, inputItem.subtask, inputItem.desc, \r\n                    inputItem.esd, inputItem.eed, inputItem.asd, inputItem.aed, inputItem.addinfo)}} />\r\n                {/* onClick={(event)=>{handleAdd()}} /> */}\r\n                <strong>To Do List</strong>\r\n            </div>\r\n                \r\n            {console.log(props.tdArray)}\r\n            \r\n            \r\n                <ul>\r\n                {props.tdArray.map((item, index) => (\r\n                    <li key={index}><strong>\r\n                        {item.task} {item.subtask} {item.desc}\r\n                        {new Date(item.esd).toLocaleDateString('en-GB')} \r\n                        {new Date(item.eed).toLocaleDateString('en-GB')}\r\n                        {new Date(item.asd).toLocaleDateString('en-GB')}\r\n                        {new Date(item.aed).toLocaleDateString('en-GB')}\r\n                        {item.addinfo}\r\n                        </strong></li>\r\n                        ))}\r\n                </ul>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        tdArray: state.toDoArray\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch) => {\r\n    return{\r\n        addMyList: (val) => dispatch({type:'ADD_ITEM' , payload: val})\r\n        }\r\n    return{\r\n        updateMyList: (val) => dispatch({type:'UPDATE_ITEM' , payload: val})\r\n        }\r\n    return{\r\n        updateMyList: (val) => dispatch({type:'DELETE_ITEM' , payload: val})\r\n        }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddToDoList)\r\n"]},"metadata":{},"sourceType":"module"}